name: Dev Workflow

on:
  push:
    branches: ["dev", "release"]
    tags: "*"

env:
    NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}
    NEXUS_SOURCE_MAIN: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-tag/
    NEXUS_SOURCE_DEV: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-snapshot/
    NEXUS_SOURCE_RELEASE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-rc/
    ARTIFACT_PATH: "./output"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code    
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore netapplication.csproj

      - name: Build the application
        run: dotnet build netapplication.csproj --configuration Release

      - name: Pack the NuGet package
        env:
          NEXUS_SOURCE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-tag/
        run: |
          VERSION=${{ github.run_id }}
          COMMIT_SHA=${{ github.sha }}
          SHORT_SHA=${COMMIT_SHA:0:6}
          echo "CustomPackageId=$VERSION" >> $GITHUB_ENV 
          echo "PackageVersion=$SHORT_SHA" >> $GITHUB_ENV

          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            git fetch origin main
            MAIN_COMMIT=$(git rev-parse origin/main)
            TAG_COMMIT=$(git rev-parse "${GITHUB_REF}")
            if [[ "$TAG_COMMIT" == "$MAIN_COMMIT" ]]; then
              dotnet pack netapplication.csproj --configuration Release --version-suffix $VERSION --output ./output
            else
              echo "Error: Tags must be created on the main branch."
              exit 1
            fi
          elif [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            dotnet pack netapplication.csproj --configuration Release --version-suffix $VERSION --output ./output 
          elif [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
            dotnet pack netapplication.csproj --configuration Release --version-suffix $SHORT_SHA --output ./output 
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            exit 1
          fi

      - name: Upload Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ${{ env.ARTIFACT_PATH }}
  
  SonarClouScan:
    name: SonarCloud Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Wait for SonarCloud Quality Gate
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          qualityGate: true
          args: >
            -Dsonar.projectKey=faraz9993_netapp
            -Dsonar.organization=faraz9993
    
      - name: Continue if Quality Gate passed
        if: success()
        run: echo "SonarCloud Quality Gate passed, proceeding with the next steps."

      - name: Fail if Quality Gate failed
        if: failure()
        run: echo "SonarCloud Quality Gate failed, exiting with status 1." && exit 1
    
  push_to_nexus:
    name: Push to Nexus
    needs: [build, SonarClouScan]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || ${{ github.ref_name == 'dev' }} || ${{ github.ref_name == 'release' }}
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'Approval' || null }}
    steps:
      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
          path: ${{ env.ARTIFACT_PATH }}

      - name: Push to Nuget-tag Repository of Nexus    
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
            cd ./output
            dotnet nuget push netapplication.1.0.0.${{ github.ref_name }}.nupkg --source $NEXUS_SOURCE_MAIN --api-key $NEXUS_API_KEY

      - name: Push to Nuget-snapshot Repository of Nexus          
        if: ${{ github.ref_name == 'dev' }}
        run: |
            cd ./output
            dotnet nuget push netapplication.1.0.0-${{ github.run_id }}.nupkg --source $NEXUS_SOURCE_DEV --api-key $NEXUS_API_KEY
             
      - name: Pushing to Nuget-rc Repository of Nexus      
        if: ${{ github.ref_name == 'release' }}
        run: |
          COMMIT_SHA=${{ github.sha }}
          SHORT_SHA=${COMMIT_SHA:0:6}
          dotnet nuget push ./output/netapplication.1.0.0-${SHORT_SHA}.nupkg --source $NEXUS_SOURCE_RELEASE --api-key $NEXUS_API_KEY