name: Main Workflow

on:
  push:
    branches: ["dev", "release"]
    tags: "*"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore netapplication.csproj

      - name: Build the application
        run: dotnet build netapplication.csproj --configuration Release

      # - name: Run the application
      #   run: dotnet run

      - name: Pack the NuGet package
        run: |
          VERSION=${{ github.ref_name }}
          dotnet pack netapplication.csproj --configuration Release --version-suffix $VERSION --output ./output       
    
      - name: List contents of output directory
        run: |
             ls -l ./output
      
      - name: Get the latest commits from main, dev, and release branches
        id: latest_commits
        run: |
          git fetch origin main dev release
          echo "::set-output name=main_commit_sha::$(git rev-parse origin/main)"
          echo "::set-output name=dev_commit_sha::$(git rev-parse origin/dev)"
          echo "::set-output name=release_commit_sha::$(git rev-parse origin/release)"
      
      - name: Check if tag's commit is from the correct branch
        id: check_tag_commit
        run: |
          # Get the commit that the tag points to
          TAG_COMMIT_SHA=${{ github.event.head_commit.id }}
          echo "Tag commit SHA: $TAG_COMMIT_SHA"
          # Get the latest commits on main, dev, and release branches
          MAIN_COMMIT_SHA=${{ steps.latest_commits.outputs.main_commit_sha }}
          DEV_COMMIT_SHA=${{ steps.latest_commits.outputs.dev_commit_sha }}
          RELEASE_COMMIT_SHA=${{ steps.latest_commits.outputs.release_commit_sha }}
          echo "Latest commit on main: $MAIN_COMMIT_SHA"
          echo "Latest commit on dev: $DEV_COMMIT_SHA"
          echo "Latest commit on release: $RELEASE_COMMIT_SHA"
  
          # Check if the tag commit matches the latest commit on any of the branches
          if [ "$TAG_COMMIT_SHA" != "$MAIN_COMMIT_SHA" ] && [ "$TAG_COMMIT_SHA" != "$DEV_COMMIT_SHA" ] && [ "$TAG_COMMIT_SHA" != "$RELEASE_COMMIT_SHA" ]; then
            echo "The tag is not pushed from any of the main, dev, or release branches. Skipping deployment."
            exit 1
          fi
          echo "The tag was pushed from a valid branch."

      

      # - name: Push to Nuget-tag Repository of Nexus
      #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
      #   env:
      #     NEXUS_SOURCE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-tag/
      #   run: |
      #     cd ./output
      #     mv netapplication.1.0.0-${{ github.ref_name }}.nupkg netapplication.${{ github.ref_name }}.nupkg
      #     ls -l
      #     dotnet nuget push netapplication.${{ github.ref_name }}.nupkg --source $NEXUS_SOURCE --api-key $NEXUS_API_KEY

      - name: Push to Nuget-snapshot Repository of Nexus
        if: ${{ github.ref_name == 'dev' }}
        env:
          NEXUS_SOURCE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-snapshot/
        run: |
          cd ./output
          mv netapplication.1.0.0.nupkg netapplication.${{ github.ref_name }}-${{ github.job }}.nupkg
          dotnet nuget push netapplication.${{ github.ref_name }}-${{ github.job }}.nupkg --source $NEXUS_SOURCE --api-key $NEXUS_API_KEY
      
      - name: Pushing to Nuget-rc Repository of Nexus
        if: ${{ github.ref_name == 'release' }}
        env:
          NEXUS_SOURCE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-rc/
        run: |
          cd ./output
          COMMIT_SHA=${{ github.sha }}
          SHORT_SHA=${COMMIT_SHA:0:6}  # Extract first 6 characters of commit SHA
          mv netapplication.1.0.0.nupkg netapplication.${{ github.ref_name }}-${SHORT_SHA}.nupkg
          dotnet nuget push netapplication.${{ github.ref_name }}-${SHORT_SHA}.nupkg --source $NEXUS_SOURCE --api-key $NEXUS_API_KEY
