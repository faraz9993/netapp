name: .NET Core CI-2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore netapplication.csproj

      - name: Build the application
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test

      - name: Run the application
        run: dotnet run
      
      - name: Pack the application for nupkg
        run: dotnet pack --configuration Release --output ./output

    #   - name: Publish the application for dll
    #     run: dotnet publish --configuration Release --output ./output --no-build --self-contained false
    
      - name: List contents of output directory
        run: ls -l ./output
          
    #   - name: Publish to Nexus Repository using nupkg
    #     run: |
    #       curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
    #         -X POST \
    #         -F "r=releases" \
    #         -F "hasPom=false" \
    #         -F "e=nupkg" \
    #         -F "file=@./output/netapplication.1.0.0.nupkg" \
    #         "http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo/netapplication.1.0.0.nupkg"
    #     env:
    #       NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    #       NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Create NuGet.Config
        run: |
          mkdir -p ~/.nuget
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
          <configuration>
            <packageSources>
              <add key=\"NexusRepo\" value=\"http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo\" />
            </packageSources>
            <config>
              <add key=\"allowInsecureConnections\" value=\"true\" />
            </config>
          </configuration>" > ~/.nuget/NuGet.Config
  
      - name: Push to Nexus Repository
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}
          NEXUS_SOURCE: http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo
        run: |
          dotnet nuget push ./output/*.nupkg --source NexusRepo --api-key $NEXUS_API_KEY
          
    #   - name: Publish to Nexus Repository using dll
    #     run: |
    #       curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
    #         -X POST \
    #         -F "r=releases" \
    #         -F "hasPom=false" \
    #         -F "e=jar" \
    #         -F "file=@./output/netapplication.dll" \
    #         "http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo/netapplication.dll"
    #     env:
    #       NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    #       NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    #   - name: Upload DLL as Artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: netapplication-dll
    #       path: ./output/netapplication.dll
