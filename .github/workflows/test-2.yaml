name: .NET Core CI-2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore netapplication.csproj

      - name: Build the application
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test

      - name: Run the application
        run: dotnet run
      
      - name: Pack the application for nupkg
        run: dotnet pack --configuration Release --output ./output

    #   - name: Publish the application for dll
    #     run: dotnet publish --configuration Release --output ./output --no-build --self-contained false
    
      - name: List contents of output directory
        run: ls -l ./output
          
    #   - name: Publish to Nexus Repository using nupkg
    #     run: |
    #       curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
    #         -X POST \
    #         -F "r=releases" \
    #         -F "hasPom=false" \
    #         -F "e=nupkg" \
    #         -F "file=@./output/netapplication.1.0.0.nupkg" \
    #         "http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo/netapplication.1.0.0.nupkg"
    #     env:
    #       NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    #       NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    #   - name: Publish to Nexus using Maven
    #     run: |
    #       mvn deploy:deploy-file \
    #         -Dfile=./output/netapplication-1.0.0.nupkg \
    #         -DgroupId=com.example \
    #         -DartifactId=netapplication \
    #         -Dversion=1.0.0 \
    #         -Dpackaging=nupkg \
    #         -DrepositoryId=nexus-repo \
    #         -Durl=http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/nuget-hosted/
    #     env:
    #       MAVEN_OPTS: "-Xmx1024m"
    #       MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    #       MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: "Upload test file to Nexus"
        id: nexus-upload
        # ToDo: change/update the line below when testing is completed
        uses: ModeSevenIndustrialSolutions/nexus-upload-action@v0.1.8
        with:
          nexus_server: faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo/
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }} # Repository secret
          nexus_repository: faraz_repo
          upload_directory: files
          filename_suffix: .txt # Optionally matches files with text as suffix
          testing: true # Optionally creates upload directory and file
          # Not implemented
          # repository_format: raw
  

    #   - name: Publish to Nexus Repository using dll
    #     run: |
    #       curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
    #         -X POST \
    #         -F "r=releases" \
    #         -F "hasPom=false" \
    #         -F "e=jar" \
    #         -F "file=@./output/netapplication.dll" \
    #         "http://faraztest.southeastasia.cloudapp.azure.com:8081/repository/faraz_repo/netapplication.dll"
    #     env:
    #       NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
    #       NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    #   - name: Upload DLL as Artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: netapplication-dll
    #       path: ./output/netapplication.dll

      - name: Upload NuGet package as Artifact (Optional)
        uses: actions/upload-artifact@v3
        with:
          name: netapplication-nupkg
          path: ./output/netapplication.1.0.0.nupkg
          if-no-files-found: warn
          include-hidden-files: false
